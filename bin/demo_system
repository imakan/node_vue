'use strict';
process.env.NODE_ENV = '"production"';
let debug = require('debug')('education_system:server');
let app = require('../app');
let express = require('express');
let path = require('path');
let http = require('http');
let serverConfig = require('../serverConfig/config.global')
let port = normalizePort(process.env.PORT || serverConfig.port);
console.log("项目端口：" + port);
app.use(express.static(path.join(__dirname, '../dist')));

app.set('port', port);
var server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {
    var port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }
    var bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' 哎呦，需要提升权限');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' 哎呦，端口已经被占用了，去看看谁用的');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    var addr = server.address();
    var bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
